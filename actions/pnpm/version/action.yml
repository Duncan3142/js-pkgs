name: "Version"
description: "Apply semantic versioning to the current branch"

inputs:
  branch:
    description: |
      The branch to use for versioning
    required: true
  base:
    description: |
      The base ref to version against, must exist locally
    required: true
  cwd:
    description: |
      The directory of the package to version
    required: true
  remote:
    description: |
      The remote to push the branch to
    required: false
    default: "origin"

runs:
  using: "composite"
  steps:
    - name: Versioning Branch
      id: checkout
      uses: Duncan3142/mono/actions/git/checkout@main
      with:
        name: ${{ inputs.branch }}
        create: true

    - name: Version
      id: version
      shell: bash
      run: |
        VERSIONING_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
        echo "Resetting ${VERSIONING_BRANCH} to ${{ inputs.base }}"
        git reset --hard ${{ inputs.base }}

        pnpm exec changeset version

        git add .

        if git commit -m "Semver $(cat package.json | jq '.name')"; then
          git push --force-with-lease '${{ inputs.remote }}' "$(git rev-parse --abbrev-ref HEAD)"
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi
      working-directory: ${{ inputs.cwd }}

    - name: PR
      shell: bash
      if : steps.version.outputs.changes == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr create --base ${{ github.ref_name }} --title "SemVer ${{ steps.pnpm.outputs.name }}" --body "This is an auto generated PR to semantically version ${{ steps.pnpm.outputs.name }}" || true
        # gh pr merge --auto --squash

outputs:
  changes:
    description: "'true' if the package was versioned, 'false' otherwise"
    value: ${{ steps.version.outputs.changes }}
