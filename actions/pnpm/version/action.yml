name: "Version"
description: "Apply semantic versioning"

inputs:
  semver-branch:
    description: |
      The branch to use for versioning
    required: true
  base-ref:
    description: |
      The base ref to version against, must exist locally
    required: true
  cwd:
    description: |
      The directory of the package to version
    required: true
  remote:
    description: |
      The remote to push the branch to
    required: false
    default: "origin"

runs:
  using: "composite"
  steps:
    - name: Versioning Branch
      id: checkout
      uses: Duncan3142/mono/actions/git/checkout@main
      with:
        name: ${{ inputs.semver-branch }}
        create: true

    - name: Version
      id: version
      shell: bash
      env:
        BASE_REF: ${{ inputs.base-ref }}
        REMOTE: ${{ inputs.remote }}
      run: |
        CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
        echo "Resetting ${CURRENT_BRANCH} to ${BASE_REF}"
        git reset --hard "${BASE_REF}"

        pnpm exec changeset version

        git add .

        CHANGES=false

        if git commit -m "Semver \"$(cat package.json | jq '.name')\""; then
          CHANGES=true
          git push --force-with-lease "${REMOTE}" "$(git rev-parse --abbrev-ref HEAD)"
        fi

        echo "changes=${CHANGES}" >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.cwd }}

    - name: PR
      shell: bash
      if : steps.version.outputs.changes == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BASE_REF: ${{ inputs.base-ref }}
        PKG_NAME: ${{ steps.pnpm.outputs.name }}
      run: |
        gh pr create --base "${BASE_REF}" --title "SemVer \"${PKG_NAME}\"" --body "This is an auto generated PR to semantically version \"${PKG_NAME}\"" || true
        # gh pr merge --auto --squash

outputs:
  changes:
    description: "'true' if the package was versioned, 'false' otherwise"
    value: ${{ steps.version.outputs.changes }}
